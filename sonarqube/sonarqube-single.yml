# services:
#   sonarqube:
#     image: sonarqube:community
#     depends_on:
#       - db
#     environment:
#       SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
#       SONAR_JDBC_USERNAME: sonar
#       SONAR_JDBC_PASSWORD: sonar
#     volumes:
#       - sonarqube_data:/opt/sonarqube/data
#       - sonarqube_extensions:/opt/sonarqube/extensions
#       - sonarqube_logs:/opt/sonarqube/logs
#     ports:
#       - "9000:9000"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
  labels:
    app: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      #nodeSelector:
      #  gee/disk: "500g"
      nodeName: k8sn1 
      containers:
        - image: sonarqube:9.4.0-community
          name: sonarqube
          env:
            - name: SONAR_JDBC_URL
              value: jdbc:postgresql://postgresql-headless:5432/sonar
            - name: SONAR_JDBC_USERNAME
              value: sonar
            - name: SONAR_JDBC_PASSWORD
              value: sonar
            - name: SONAR_CE_JAVAADDITIONALOPTS
              value: "-server -Xms4096m -Xmx4096m"
          ports:
            - containerPort: 9000
              name: sonarqube
          resources:
           requests:
             cpu: 1000m
             memory: 4096Mi
           limits:
             cpu: 1000m
             memory: 4096Mi
          volumeMounts:
            - name: sonarqube-data
              mountPath: /opt/sonarqube/data
            - name: sonarqube-extensions
              mountPath: /opt/sonarqube/extensions            
            - name: sonarqube-logs
              mountPath: /opt/sonarqube/logs
      volumes:
        - name: sonarqube-data
          hostPath:
            path: /root/k8s-yml/sonarqube/single/data                   
            type: DirectoryOrCreate
        - name: sonarqube-extensions
          hostPath:
            path: /root/k8s-yml/sonarqube/single/extensions                   
            type: DirectoryOrCreate
        - name: sonarqube-logs
          hostPath:
            path: /root/k8s-yml/sonarqube/single/logs                   
            type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata: 
  name: sonarqube-headless
spec: 
  selector: 
    app: sonarqube
  type: ClusterIP  
  clusterIP: None
  ports: 
  - name: sonarqube
    port: 9000 
    targetPort: 9000  
    protocol: "TCP" 
# ---
# apiVersion: "v1"
# kind: Service
# metadata: 
#   name: sonarqube
# spec: 
#   selector: 
#     app: sonarqube
#   type: NodePort  
#   ports: 
#   - name: sonarqube
#     port: 9000 
#     nodePort: 30028  
#     protocol: "TCP" 
---
apiVersion: "networking.k8s.io/v1"
kind: Ingress
metadata:
  name: sonarqube-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: sonarqube.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sonarqube-headless
            port:
              number: 9000