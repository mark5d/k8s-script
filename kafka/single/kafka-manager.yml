---
apiVersion: apps/v1
kind: Deployment                               
metadata:
  name: kafka-manager
spec:
  replicas: 1                                               
  selector:
    matchLabels:                                         
      app: kafka-manager      
  template:
    metadata:
      labels:
        app: kafka-manager
    spec:
      nodeName: k8s.node1  
      containers:                                          
      - name: kafka-manager                                     
        image: sheepkiller/kafka-manager                            
        imagePullPolicy: IfNotPresent        
        resources:
          limits:
            cpu: 1000m
            memory: 2048Mi
          requests:
            cpu: 1000m
            memory: 2048Mi
        ports:
        - containerPort: 9000
          name: client
        env:                                                   
        - name: ZK_HOSTS
          value: "zookeeper:2181"
        - name: APPLICATION_SECRET
          value: "letmein"
        - name: KM_ARGS
          value: "-Djava.net.preferIPv4Stack=true"

---
apiVersion: "networking.k8s.io/v1"
kind: Ingress
metadata:
  name: nginx-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: kafkamanager.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kafka-manager-service
            port:
              number: 9000
---
apiVersion: "v1"
kind: Service
metadata:
  name: kafka-manager-service
spec: 
  type: ClusterIP  #ExternalName外部服务引入集群, ClusterIP仅用于集群内部通讯, NodePort接入集群外部流量, LoadBalancer接入云负载均衡器
  clusterIP: None #集群内访问地址,可以不指定，可以为Nobe或""时，为hardless服务，无头service,无头service直接走ingress代理，不走service redis.defaut.svc.cluster.local.
  selector: 
    app: kafka-manager
  ports:
  - name: http
    targetPort: 9000
    port: 9000

